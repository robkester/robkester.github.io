//////////////////////////////
// VARIABLES
//////////////////////////////

// Fonts
// Import the fonts
$sans-serif: Courier, Helvetica, Arial, sans-serif;

// Colors
$text-color: #505050;
$highlight: #ED1C24;
$link-color: $highlight;
$link-hover: $text-color;

//Global width
// $global-width: 59.125rem;
$global-width: 978px;

//Pading and Margins
$margin: 20px;
$module-spacing: 25px;
$module-padding: 20px;
$module-padding-large: 40px;
$margin-small: 10px;
$margin-medium: 15px;

//Colours
$black:             #000;
$white:             #fff;

/*One Custom Tones*/
$crash-lightest-grey:   #f8f8f8;
$crash-light-grey:      #efefef;
$crash-mid-grey:        #777777;
$crash-grey:            $crash-mid-grey;
$crash-dark-grey:       #444444;
$crash-border:          #D1D1D1;
$crash-red:             #EC4C4C;
$crash-blue:            #4E72B6;
$crash-green:          #1FFC26;


/*Social button colors*/
$facebook:      #3b5998;
$twitter:       #00aced;
$whatsapp:      #5CBE4A;
$pinterest:     #CB2027;
$google:        #dd4b39;
$instagram:     #376489;
$linkedin:      #007bb6;
$youtube:       #bb0000;
$email:         $crash-dark-grey;
$social-hover:  #3b3b3b;

// Alert Colors
$alert-yellow:      #ebe16f;
$alert-red:         #FFD9D9;
$alert-green:       #D9FFD9;
$alert-blue:        #d5edf8;
$disabled-gray:     #cfcfcf;


// Media queries from Foundation framework by ZURB
// http://foundation.zurb.com/
// and on GitHub at https://github.com/zurb/foundation

//color functions
/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

// functions
// originally in https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

// Here we define the lower and upper bounds for each media size
$small-range: (0em, 40em); /* 0, 640px */
$medium-range: (40.063em, 64em); /* 641px, 1024px */
$large-range: (64.063em, 80em); /* 1025px, 1280px */
$xlarge-range: (80.063em, 90em); /* 1281px, 1440px */
$xxlarge-range: (90.063em, 120em); /* 1441px, 1920px */
$xxxlarge-range: (120.063em); /* 1921px */

// Media Queries
$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$medium-down: "#{$screen} and (max-width:#{upper-bound($medium-range)})";

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

$xxxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxxlarge-range)})" !default;
$xxxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxxlarge-range)}) and (max-width:#{upper-bound($xxxlarge-range)})" !default;


// ----- MIXINS -----
// Clearfix
// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
%clearfix {
  zoom: 1;
    &:before, &:after { content: ""; display: table; }
    &:after { clear: both; }
}

// Overflow
%overflow {
  overflow:hidden;
  _overflow:visible;
  zoom:1;
}

%hide-text{
    overflow:hidden;
    text-indent:-9000px;
    display:block;
}


/* Opacity  ========================================================================== */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
//Usage: .article-heading { @include opacity(0.8);}

/* Text overflow  ========================================================================== */
%text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
//Usage: .text-truncate { @include text-truncate; }


//Usage: body {@include font-size(16);}

/* Cross browser inline block  ========================================================================== */
@mixin inline-block() {
  display: -moz-inline-stack;
  display: inline-block;
  vertical-align: top;
  zoom: 1;
  *display: inline;
}

//Usage: .icon { @include inline-block(); }

/* Text replacement (instead of text-indent)  ========================================================================== */
%text-replacement {
  border: 0;
  color: transparent;
  font: 0/0 a;
  text-shadow: none;
}

.hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/* Line Height  ========================================================================== */

@mixin line-height($heightValue: 12 ){
  line-height: $heightValue + px; //fallback for old browsers
  line-height: (0.125 * $heightValue) + rem;
}

//Usage: body {@include line-height (16);}

/* Border Radius  ========================================================================== */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

//Usage:  .button { @include border-radius(5px); }

/* Border Shadow ========================================================================== */
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
      -webkit-box-shadow:$top $left $blur $color #{$inset};
      -moz-box-shadow:$top $left $blur $color #{$inset};
      box-shadow:$top $left $blur $color #{$inset};
}

/* Text Shadow ========================================================================== */
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
  text-shadow: $x $y $blur $color
}
//Usage:  .text-shafow { @include text-shadow(1px, 1px, 1px, rgba(0,0,0,.4)); }


/* Input Border  ========================================================================== */
%input-border {
    border: 1px solid lighten($crash-grey, 10%);
}

/* Webkit-style focus  ========================================================================== */
%tab-focus {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

/* Break word  ========================================================================== */
%break-word {
  -ms-word-break: break-all;

       /* Be VERY careful with this, breaks normal words wh_erever */
       word-break: break-all;

       /* Non standard for webkit */
       word-break: break-word;

  -webkit-hyphens: auto;
     -moz-hyphens: auto;
          hyphens: auto;
}

/* Box Sizing
  ========================================================================== */

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
  -webkit-box-sizing: $type;
  -moz-box-sizing:    $type;
  -ms-box-sizing:     $type;
  box-sizing:         $type;
}

/* Transition
  ========================================================================== */


/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit",  "");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
}


/* Lists
  ========================================================================== */
%unstyled-list {
    line-height: 1;
    list-style: none;
    list-style-type: none;
    margin: 0;
    padding: 0;
}

%indented-styled-list {
  ul {
    margin:0;
    list-style: none;
    display: table;
    > li {
      display: table-row;
      font-size: rem-calc(13);
      a {
        color:$text-color;
        &:hover {
          color:$crash-red;
        }
      }
      &:before {
        content:"â™¦";
        color:$crash-blue;
        padding-right: 3px;
        display: inline-block;
        font-size:90%;
        display: table-cell;
        text-align: right;
      }
    }
  }
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}
